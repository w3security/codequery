| <D>(x: D): D | 1 | 0 | D | no bound |
| <E>(x: () => E): E | 1 | 0 | E | no bound |
| <E>(x: E[]): E | 1 | 0 | E | no bound |
| <S extends ConcatArray<T \| S>>(callbackfn: (value: ConcatArray<T \| S>... | 1 | 0 | S | ConcatArray<T \| S> |
| <S extends E>(callbackfn: (value: E, index: number, array: E[]) => va... | 1 | 0 | S | no bound |
| <S extends S>(callbackfn: (value: S, index: number, array: S[]) => va... | 1 | 0 | S | no bound |
| <S extends T \| S \| ConcatArray<T \| S>>(callbackfn: (value: T \| S \| Co... | 1 | 0 | S | no bound |
| <S extends T \| S>(callbackfn: (value: T \| S, index: number, array: (T... | 1 | 0 | S | no bound |
| <S extends T>(callbackfn: (value: T, index: number, array: T[]) => va... | 1 | 0 | S | no bound |
| <S extends T>(callbackfn: (value: T, index: number, array: T[]) => va... | 1 | 0 | S | no bound |
| <S extends U>(callbackfn: (value: U, index: number, array: U[]) => va... | 1 | 0 | S | no bound |
| <S extends any>(callbackfn: (value: any, index: number, array: any[])... | 1 | 0 | S | any |
| <S extends any[]>(x: S, y: T[]): S | 1 | 0 | S | any[] |
| <S extends string>(callbackfn: (value: string, index: number, array: ... | 1 | 0 | S | string |
| <S>(x: S, y: S): S | 1 | 0 | S | no bound |
| <S>(x: S, y: T): [S, T] | 1 | 0 | S | no bound |
| <U>(callbackfn: (previousValue: U, currentValue: ConcatArray<T \| S>, ... | 1 | 0 | U | no bound |
| <U>(callbackfn: (previousValue: U, currentValue: E, currentIndex: num... | 1 | 0 | U | no bound |
| <U>(callbackfn: (previousValue: U, currentValue: S, currentIndex: num... | 1 | 0 | U | no bound |
| <U>(callbackfn: (previousValue: U, currentValue: T \| S \| ConcatArray<... | 1 | 0 | U | no bound |
| <U>(callbackfn: (previousValue: U, currentValue: T \| S, currentIndex:... | 1 | 0 | U | no bound |
| <U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: num... | 1 | 0 | U | no bound |
| <U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: num... | 1 | 0 | U | no bound |
| <U>(callbackfn: (previousValue: U, currentValue: U, currentIndex: num... | 1 | 0 | U | no bound |
| <U>(callbackfn: (previousValue: U, currentValue: any, currentIndex: n... | 1 | 0 | U | no bound |
| <U>(callbackfn: (previousValue: U, currentValue: string, currentIndex... | 1 | 0 | U | no bound |
| <U>(callbackfn: (value: ConcatArray<T \| S>, index: number, array: Con... | 1 | 0 | U | no bound |
| <U>(callbackfn: (value: E, index: number, array: E[]) => U, thisArg?:... | 1 | 0 | U | no bound |
| <U>(callbackfn: (value: S, index: number, array: S[]) => U, thisArg?:... | 1 | 0 | U | no bound |
| <U>(callbackfn: (value: T \| S \| ConcatArray<T \| S>, index: number, ar... | 1 | 0 | U | no bound |
| <U>(callbackfn: (value: T \| S, index: number, array: (T \| S)[]) => U,... | 1 | 0 | U | no bound |
| <U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?:... | 1 | 0 | U | no bound |
| <U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?:... | 1 | 0 | U | no bound |
| <U>(callbackfn: (value: U, index: number, array: U[]) => U, thisArg?:... | 1 | 0 | U | no bound |
| <U>(callbackfn: (value: any, index: number, array: any[]) => U, thisA... | 1 | 0 | U | no bound |
| <U>(callbackfn: (value: string, index: number, array: string[]) => U,... | 1 | 0 | U | no bound |
